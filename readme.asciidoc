= NESNELERİN İNTERNETİ AKILLI EV SİSTEMİ

*Özet—Projemizde sıcaklık sensörü kullanılarak evin sıcaklığınının ölçüm değerlerini mobil uygulama sayesinde ev sahibine ileten, istenilen sıcaklık değerlerine uzaktan control sağlayan akıllı ev sistemi tasarlanmak istenmiştir.*

* I.	GİRİŞ 

Projemizi Arduino IDE ortamında geliştirdik. Ayrıca telefondan ev sıcaklığını ayarlayabilmek için bir mobil  uygulama geliştirdik.
Projemizde NodeMcu v3 kartını tercih ettik. Bunun sebebi ayrı bir wifi kartı kullanımına gerek kalmadan bu kartın üzerinde ESP8266 Wifi kartının tümleşik durumda bulunmasıydı.                     
Öncelikle lm35 sıcaklık sensöründen data gönderebilmek için ThingSpeak’te evsicakligi adında bir kanal oluşturduk[1].

image::images/1.jpg[]

Devremize ilk önce NodeMcu v3 kartımızı bağladık[2] ve wifi bağlantılarını control ettik. Wifi’ ye başarılı bir şekilde bağlandığını gördükten sonra lm35 sıcaklık sensörümüzü devremize bağladık ve ThingSpeak’e data göndermeye başladık. Bu grafiğe de anlikSicaklik adını verdik[4].

image::images/2.jpg[]

Datalarımızı ThingSpeak’te başarılı bir şekilde gördükten sonra devremize biri kırmızı biri mavi olmak üzere iki adet led bağladık. Ve ThingSpeak’te bir grafik daha oluşturduk. istenilenSicaklik adını verdiğimiz grafik mobil uygulamadan gönderdiğimiz sıcaklık değerlerini bize gösteriyor.

image::images/3.jpg[]

Ve eğer ki gönderdiğimiz istenilenSicaklik değerimiz anlikSicaklik değerinden düşük ise mavi led, yüksek ise kırmızı led yanıyor[3].

image::images/4.jpg[]

* II.	DEVRE ŞEMASI 

image::images/5.jpg[]

* III.	GELİŞTİRME

Oluşturduğumuz sistemin kodları aşağıdaki gibidir.
[source,]
----
#include <ThingSpeak.h>
#include <ESP8266WiFi.h>

#define KIRMIZI D0
#define MAVI D1

//const char* ssid = "OKY_WİFİ";
//const char* password = "*****";

const char* ssid = "OKY";
const char* password = "*****";

const char * apiWritekey = "****";
const char * apiReadkey  = "****";
const char* server = "api.thingspeak.com";

unsigned long channelID = 900937;
float resolution = 3.3/1024;

WiFiClient client;

void wifiyeBaglan(){
  WiFi.begin(ssid, password);
 
  Serial.println();
  Serial.println();
  Serial.print("Baglanacak wifi adi  ");
  Serial.println(ssid);
 
  WiFi.begin(ssid, password);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("NodeMcu wifiye baglaniyor...");
  Serial.println(ssid);
  Serial.println();
}

void setup() {
  Serial.begin(115200);
  delay(10);

  
  
  pinMode(KIRMIZI, OUTPUT);
  pinMode(MAVI, OUTPUT); 
  wifiyeBaglan();
  ThingSpeak.begin(client);
}
 
void loop() {
  sicaklikVerisiniThingSpeakaYaz();
}

void sicaklikVerisiniThingSpeakaYaz(){
  float anlikSicaklik = (analogRead(A0) * resolution) * 100;
  Serial.print("Sicaklik:");
  Serial.print(anlikSicaklik);
  Serial.println();
  Serial.print("Thingspeak’a gönder");
  Serial.println("Bekleniyor..");
  ThingSpeak.writeField(channelID, 1, anlikSicaklik, apiWritekey);
  float istenenSicaklik = ThingSpeak.readFloatField(channelID,2,apiReadkey);
  Serial.println(istenenSicaklik);
  if(anlikSicaklik > istenenSicaklik ){
    Serial.println("Mavi Led Yanacaktir.");
    digitalWrite(MAVI, HIGH);
    digitalWrite(KIRMIZI, LOW);
  }else{
    Serial.println("Kirmizi Led Yanacaktir.");
    digitalWrite(KIRMIZI, HIGH);
    digitalWrite(MAVI, LOW);
  }
  delay(15000);
}

----

* IV.	REFERANSLAR

[1]	https://maker.robotistan.com/esp8266-dersleri-2-thingspeake-sicaklik-yollama/

[2]	https://www.instructables.com/id/Getting-Started-With-ESP8266LiLon-NodeMCU-V3Flashi/

[3]	https://www.instructables.com/id/NodeMCU-Basic-Project-Blink-a-LED/ 

[4]	https://www.instructables.com/id/NodeMCU-Basic-Project-Blink-a-LE
